<!-- 聊天记录模式演示(nvue)，使用nvue可实现聊天记录无闪动分页 -->
<template>
	<view class="content">
		<z-paging ref="paging" v-model="dataList" use-chat-record-mode :cellStyle.sync="cellStyle" @query="queryList">
			<!-- 如果希望其他view跟着页面滚动，可以放在z-paging标签内 -->
			<!-- list数据，建议像下方这样在item外层套一个view，而非直接for循环item，因为slot插入有数量限制 -->
			<template v-for="(item,index) in dataList">
				<!-- 在nvue中，z-paging中插入的列表item必须是cell，必须使用cell包住，因为在nvue中，z-paging使用的是nvue的list组件。 -->
				<!-- 注意！！！！这里ref必须绑定index，且格式为z-paging-${index}，格式不能变，否则会导致滑动到顶部加载更多数据时滚动位置不正确！！！！！！ -->
				<!-- :style="cellStyle"必须写，必须写！！！ -->
				<cell :style="cellStyle" class="item" :key="item.title" :ref="`z-paging-${index}`"
					@click="itemClick(item)">
					<text class="item-title" v-if="item.title.length<3">第{{item.title}}条聊天记录</text>
					<text class="item-title" v-else>{{item.title}}</text>
					<text class="item-detail">{{item.detail}}</text>
					<view class="item-line"></view>
				</cell>
			</template>
		</z-paging>
		<view class="add-chat-record" @click="addChatRecordClick">
			<text style="font-size: 28rpx;color: white;">新增</text>
		</view>
	</view>
</template>

<script>
	import request from '../../http/request.js'
	export default {
		data() {
			return {
				//v-model绑定的这个变量不要自己赋值、不要自己赋值、不要自己赋值！！！
				dataList: [],
				tabIndex: 0,
				newIndex: 0,
				cellStyle: {}
			}
		},
		methods: {
			queryList(pageNo, pageSize) {
				//组件加载时会自动触发此方法，因此默认页面加载时会自动触发，无需手动调用
				//这里的pageNo和pageSize会自动计算好，直接传给服务器即可
				//模拟请求服务器获取分页数据，请替换成自己的网络请求
				const params = {
					pageNo: pageNo,
					pageSize: pageSize,
					type: this.tabIndex + 1
				}
				request.queryList(params).then(res => {
					//将请求的结果数组传递给z-paging
					this.$refs.paging.complete(res.data.list);
				}).catch(res => {
					//如果请求失败写this.$refs.paging.complete(false);
					//注意，每次都需要在catch中写这句话很麻烦，z-paging提供了方案可以全局统一处理
					//在底层的网络请求抛出异常时，写uni.$emit('z-paging-error-emit');即可
					this.$refs.paging.complete(false);
				})
			},
			addChatRecordClick(item) {
				this.newIndex++;
				this.$refs.paging.addChatRecordData({
					'title': '新增数据' + this.newIndex,
					'detail': '新增的聊天数据'
				});
			},
			itemClick(item) {
				console.log('点击了', item.title);
			}
		}
	}
</script>

<style>
	.add-chat-record {
		position: fixed;
		width: 80rpx;
		height: 80rpx;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		background-color: red;
		border-radius: 50%;
		right: 30rpx;
		bottom: 100rpx;
	}

	.item {
		flex-direction: row;
		position: relative;
		height: 150rpx;
		align-items: center;
		justify-content: space-between;
		padding: 0rpx 30rpx;
	}

	.item-detail {
		padding: 5rpx 15rpx;
		border-radius: 10rpx;
		font-size: 28rpx;
		color: white;
		background-color: #007AFF;
	}

	.item-line {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		height: 1px;
		background-color: #eeeeee;
	}
</style>
