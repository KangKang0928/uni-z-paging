<!-- 滑动切换选项卡演示(标准写法)(nvue) -->
<!-- 注意：此tab-view仅为z-paging的demo演示之用，未作兼容与细节处理，不建议直接使用，建议使用第三方成熟的tab-view -->
<template>
	<z-paging-swiper>
		<!-- 需要固定在顶部不滚动的view放在slot="top"的view中 -->
		<z-tabs slot="top" :list="tabList" :current="current" @change="tabsChange" ></z-tabs>
		<!-- swiper必须设置flex:1，因为swiper有默认的高度，只有设置flex:1才可以铺满页面  -->
		<swiper class="swiper" :current="current" @transition="transition" @animationfinish="animationfinish" @change="onswiperchange">
			<swiper-item class="swiper-item" v-for="(item, index) in tabList" :key="index">
				<swiper-item-n :tabIndex="index" :currentIndex="current"></swiper-item-n>
			</swiper-item>
		</swiper>
	</z-paging-swiper>
</template>

<script>
	export default {
		data() {
			return {
				tabList: ['测试1', '测试2', '测试3', '测试4'],
				// 因为内部的滑动机制限制，请将tabs组件和swiper组件的current用不同变量赋值
				current: 0, // tabs组件的current值，表示当前活动的tab选项
			};
		},
		methods: {
			// tabs通知swiper切换
			tabsChange(index) {
				this.current = index;
			},
			// swiper-item左右移动，通知tabs的滑块跟随移动
			transition(e) {
				let dx = e.detail.dx;
			},
			onswiperchange(e) {
				// #ifndef APP-PLUS || H5 || MP-WEIXIN || MP-QQ
				let index = e.target.current || e.detail.current;
				this.tabsChange(index);
				// #endif
			},
			animationfinish(e) {
				let current = e.detail.current;
				this.current = current;
			}
		}
	}
</script>

<style scoped>
	.swiper {
		flex: 1;
	}
</style>
